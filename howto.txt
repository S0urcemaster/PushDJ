new send from Push to Traktor

- traktor-mappings.ods -> generate Message
- traktor.mappings -> paste message
- Deck oder DJController -> neue static für color on/off (nur matrix buttons)
- TraktorAdapter -> neuen static für message und mit wert aus config file belegen
- DJController oder DeckInit -> neue Felder für Button und TraktorMessage
- DJController oder DeckInit -> neue pressed(/released)- Methode für TraktorAdapter.send und setColor
- DJController oder DeckInit -> entsprechende else clauses in buttonPressed
- DJController oder DeckInit -> link methode set...Button erzeugen
- DJController -> Push button und Traktor message verlinken; listener hinzufügen
- für benötigtes button release -> PushInputReceiver neuen case bei NOTE_OFF oder data2 == 0 falls CC
- DJController. oder Deck.activate -> Startfarben setzen
- Mapping in Traktor

new return from Traktor

- traktor-mappings.ods -> generate Message
- traktor.mappings -> paste message
- TraktorAdapter -> new static TraktorMessage
- TraktorAdapter -> initialize with getMessage
- VirtualMidiReceiver.run -> new case (data1)
- DJController oder Deck -> neues TraktorMessage Feld
- DJController oder Deck -> outSent -> neues else und Farbe setzen
- DJController oder Deck -> neue set...Message methode/ listener hinzufügen
- DJController constructor -> message initialisieren
- Mapping in Traktor

Internal Push processing

- Deck oder DJController -> neue static für color on/off (nur matrix buttons)
- Deck oder DJController -> neue Felder für Button
- Deck oder DJController -> neue pressed(/released)- Methode für TraktorAdapter.send und setColor
